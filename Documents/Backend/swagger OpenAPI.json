{
  "openapi": "3.0.1",
  "info": {
    "title": "Computer Security HA",
    "description": "Web API for the purchasing of CAFF files.",
    "version": "v1"
  },
  "paths": {
    "/api/auth/login": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Logs in with the user",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user's username",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The user's password",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The login was successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginDTO"
                }
              }
            }
          },
          "404": {
            "description": "If no registeres user was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Caffs": {
      "get": {
        "tags": [
          "Caffs"
        ],
        "summary": "Returns all the CAFF files' information that match the searchBy term\r\n(if it's empty all CAFF files' information returned)",
        "parameters": [
          {
            "name": "searchBy",
            "in": "query",
            "description": "Dynamic LINQ search term",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the CAFF files' information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CaffDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Caffs"
        ],
        "summary": "Uploads a CAFF file",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "The id of the uploader",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string"
                  },
                  "ContentDisposition": {
                    "type": "string"
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "FileName": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful upload"
          },
          "400": {
            "description": "If the content type is not multipart boundry or\r\n            the file extension is worng or the CAFF file is not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "If no user was found with the supplied id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Caffs/{id}": {
      "get": {
        "tags": [
          "Caffs"
        ],
        "summary": "Returns the CAFF file's information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CAFF file's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the CAFF file's id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaffDTO"
                }
              }
            }
          },
          "404": {
            "description": "If no CAFF file was found with the supplied id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Caffs"
        ],
        "summary": "Changes the name of the CAFF file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CAFF file's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "File's new name",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The change was successful"
          },
          "400": {
            "description": "If the new name is less than 1 character",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "If no CAFF file was found with the supplied id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Caffs"
        ],
        "summary": "Deletes a CAFF file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CAFF file's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The deletion was successful"
          },
          "404": {
            "description": "If no CAFF file was found with the supplied id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Caffs/{id}/download": {
      "get": {
        "tags": [
          "Caffs"
        ],
        "summary": "Returns the CAFF file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CAFF file's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the CAFF files"
          },
          "404": {
            "description": "If no CAFF file was found with the supplied id",
            "content": {
              "application/caff": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Caffs/{id}/preview": {
      "get": {
        "tags": [
          "Caffs"
        ],
        "summary": "Returns the parsed CAFF file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "CAFF file's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the parsed CAFF files"
          },
          "404": {
            "description": "If no CAFF file was found with the supplied id",
            "content": {
              "application/gif": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Comments": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Returns all the comments",
        "responses": {
          "200": {
            "description": "Returns all the comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Adds a new comment to a CAFF file",
        "requestBody": {
          "description": "New comment with the commenter's id, CAFF file's id and the comment text",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCommentDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCommentDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewCommentDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The comment was added successfuly",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentDTO"
                }
              }
            }
          },
          "400": {
            "description": "If the comment text was less than 1 character long",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "If no user or CAFF file was found with the supplied id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Comments/{id}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Returns the comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The comment's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentDTO"
                }
              }
            }
          },
          "404": {
            "description": "If no comment was found with the supplied id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Comments"
        ],
        "summary": "Changes the text of the comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The comment's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New comment's text",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The change was successful"
          },
          "400": {
            "description": "If the new name is less than 1 character",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "If no comment was found with the supplied id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "summary": "Deletes a comment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "the comment's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The deletion was successful"
          },
          "404": {
            "description": "If no comment was found with the supplied id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Test/initdb": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Initializes the DB for testing (only available in debug mode)",
        "responses": {
          "200": {
            "description": "Successful initialization"
          }
        }
      }
    },
    "/api/Test/reset": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Emptys all the tables (only available in debug mode)",
        "responses": {
          "200": {
            "description": "Successful reset"
          }
        }
      }
    },
    "/api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns all the registered users",
        "responses": {
          "200": {
            "description": "Returns all the registered users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Registers a new user",
        "requestBody": {
          "description": "The new user's username and password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user was added successfuly"
          },
          "400": {
            "description": "If the user's username or password or the username contains whitespaces or already is in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns the user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "404": {
            "description": "If no user was found with the supplied id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Deletes the user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "the user's id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The deletion was successful"
          },
          "404": {
            "description": "If no user was found with the supplied id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CaffDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "uploaderId": {
            "type": "string",
            "nullable": true
          },
          "uploaderUsername": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/UserDTO"
          }
        },
        "additionalProperties": false
      },
      "LoginDTO": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewCommentDTO": {
        "type": "object",
        "properties": {
          "caffId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "commentText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "RegisterDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}